# Default values for deploypackage.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: nginx
  pullPolicy: Always
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []

nameOverride: ""

fullnameOverride: ""

istio:
  enabled: false

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "default"

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

ports:
   - name: &referencedPortName http
     containerPort: &referencedPort 8080
     protocol: TCP
  # - name: debug
  #   containerPort: 5005
  #   protocol: TCP

livenessProbe: []
  # httpGet:
  #   path: /
  #   port: *referencedPortName
  # failureThreshold: 10
  # initialDelaySeconds: 5
  # periodSeconds: 10
  # successThreshold: 1
####### OR #######
  # tcpSocket:
  #   port: *referencedPortName
  # failureThreshold: 10
  # initialDelaySeconds: 5
  # periodSeconds: 10
  # successThreshold: 1

readinessProbe: []
  # httpGet:
  #   path: /
  #   port: *referencedPortName
  # failureThreshold: 10
  # initialDelaySeconds: 5
  # periodSeconds: 10
  # successThreshold: 1
####### OR #######
  # tcpSocket:
  #   port: *referencedPortName
  # failureThreshold: 10
  # initialDelaySeconds: 5
  # periodSeconds: 10
  # successThreshold: 1


service:
  type: ClusterIP
  ports:
  - port: *referencedPort
    targetPort: *referencedPortName
    protocol: TCP
    name: *referencedPortName

route:
  enabled: true
  targetServicePort: *referencedPortName

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 5
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

envFrom: []

env: []

volumeMounts: []

volumes: []

extras: []

conjur:
  enabled: false
  mode: &conjurMode "init"
  authnName: &conjurAuthnName ""
  CONJUR_AUTHN_URL: &conjurAuthnUrl '$(CONJUR_APPLIANCE_URL)/api/authn-k8s/$(authnName)'
  CONJUR_AUTHN_LOGIN: &conjurAuthnLogin ""
  conjurContainerName: &conjurContainerName "authenticator"
  containerImage: &containerImage "cyberark/conjur-authn-k8s-client"

conjurContainerConfig:
  - name: *conjurContainerName
    image: *containerImage
    env:
      - name: MY_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: MY_POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: MY_POD_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.podIP
      - name: CONTAINER_MODE
        value: *conjurMode
      - name: authnName
        value: *conjurAuthnName
      - name: CONJUR_AUTHN_URL
        value: *conjurAuthnUrl
      - name: CONJUR_AUTHN_LOGIN
        value: *conjurAuthnLogin
    envFrom:
    - configMapRef:
        name: conjur-connection
    volumeMounts:
      - name: conjur-access-token
        mountPath: /run/conjur

initContainers: []

sidecarContainers: []

