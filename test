# Simple GitOps(ArgoCD) solution with Helm Packages

## Summary
In this repository you will find how to implement GitOps to your Kubernetes(as well as Openshift) cluster with ArgoCD. 
- We will use Helm for creating **Deployment** and **Namespace** and it will make easier for us to do deployments and create namespace. 
- With Helm's help, you can create **Deployment** and **Namespace** with just one YAML for each. Those YAML's will be the ArgoCD's Application Manifest YAML that has Helm Chart's values in it.
- You can find the Helm Chart's in this repo: https://github.com/burhanuguz/helm-chart-gitops/

It might be confusing at start but once you get the idea your deployments will only need git push at the end :)

## Prerequisites
- ArgoCD
- A git Repo
- Kubernetes Cluster :)

## Explanation
Let us explain the idea behind the it. ArgoCD watches the repo's you define in it. You always need to define new repositories that holds the manifest of the application for the new application. Or simply pushing all the application code to the single repository without any best practice.

To overcome this issue, and only having single repo 

The idea is, you will have a repository that holds all information about namespaces, as well as applications like in below. namespace, and app YAML's will be Helm Chart 

ðŸ“¦cluster-named-repository  
 â”£ ðŸ“‚namespaces  
 â”ƒ â”£ ðŸ“‚namespace-1  
 â”ƒ â”ƒ â”£ ðŸ“‚app-1  
 â”ƒ â”ƒ â”ƒ â”— ðŸ“œapp-1-configmap.yaml  
 â”ƒ â”ƒ â”£ ðŸ“‚app-3  
 â”ƒ â”ƒ â”ƒ â”— ðŸ“œapp-3-secret.yaml  
 â”ƒ â”ƒ â”£ ðŸ“œapp-1.yaml  
 â”ƒ â”ƒ â”— ðŸ“œapp-3.yaml  
 â”ƒ â”£ ðŸ“‚namespace-2  
 â”ƒ â”ƒ â”£ ðŸ“‚app-2  
 â”ƒ â”ƒ â”ƒ â”£ ðŸ“œapp-2-secret-1.yaml  
 â”ƒ â”ƒ â”ƒ â”— ðŸ“œapp-2-secret-2.yaml  
 â”ƒ â”ƒ â”£ ðŸ“‚app-4  
 â”ƒ â”ƒ â”ƒ â”£ ðŸ“œapp-4-configmap.yaml  
 â”ƒ â”ƒ â”ƒ â”£ ðŸ“œapp-4-secret-1.yaml  
 â”ƒ â”ƒ â”ƒ â”— ðŸ“œapp-4-secret-2.yaml  
 â”ƒ â”ƒ â”£ ðŸ“œapp-2.yaml  
 â”ƒ â”ƒ â”— ðŸ“œapp-4.yaml  
 â”ƒ â”£ ðŸ“œnamespace-1.yaml  
 â”ƒ â”— ðŸ“œnamespace-2.yaml  
 â”— ðŸ“œcluster-namespaces.yaml

In the [Helm Chart](https://github.com/burhanuguz/helm-chart-gitops/) repo you will find **new-namespace** and **deploypackage** Charts.

## *new-namespace* Chart

Simply pushing a YAML to the repo will create **namespace** with **limit range**, **resource quoata** and in case you have Conjur in your cluster you can create conjur connection **ConfigMap** as well.
Also the same applies to the Deployment. Pushing a single YAML file to the specified directory at your repository will create Deployment with Service, Ingress, Route, ServiceAccount, HPA and also Deployment can 

